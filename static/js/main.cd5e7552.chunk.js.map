{"version":3,"sources":["components/TodoForm/TodoForm.js","hooks/useLocalStorage.js","hooks/useTodos.js","views/EditTodoPage/EditTodoPage.jsx","components/TodoHeader/TodoHeader.js","components/TodoCounter/TodoCounter.js","components/TodoSearch/TodoSearch.js","components/TodoList/TodoList.js","components/TodoItem/TodoItem.js","components/CreateTodoButton/CreateTodoButton.js","components/EmptyTodos/EmptyTodos.js","components/ChangeAlertWithStorageListener/ChangeAlert.js","assets/withStorageListener.js","views/HomePage/HomePage.jsx","views/NewTodoPage/NewTodoPage.jsx","views/App.js","index.js"],"names":["TodoForm","submitEvent","submitText","title","defaultTodoText","navigate","useNavigate","console","log","useState","newTodoValue","setNewTodoValue","useEffect","onSubmit","event","preventDefault","htmlFor","name","id","cols","rows","placeholder","value","onChange","target","className","onClick","type","disabled","length","useLocalStorage","itemName","initialValue","useReducer","reducer","initialState","state","dispatch","sincronizedItem","item","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","setItem","stringify","actionTypes","success","payload","onSuccess","newItem","save","onSave","sincronize","action","reducerObject","useTodos","todos","saveTodos","setSincronizedItem","searchValue","setSearchValue","completedTodos","filter","todo","completed","totalTodos","filteredText","useMemo","text","toLowerCase","includes","states","getTodo","todoIndex","findIndex","stateUpdaters","toggleTodo","newTodos","deleteTodo","splice","editTodo","newText","addTodo","todoList","idList","map","Math","max","newTodoId","push","EditTodoPage","todoText","location","useLocation","params","useParams","Number","TodoHeader","children","TodoCounter","TodoSearch","TodoList","props","renderFunc","render","onEmptyTodos","onEmptySearchResults","TodoItem","onComplete","onEdit","onDelete","CreateTodoButton","EmptyTodos","WrappedComponent","ChangeAlertWithStorageListener","show","toggleShow","storageChange","setStorageChange","change","key","window","addEventListener","removeEventListener","HomePage","searchText","NewTodoPage","App","path","element","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd5e7552.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ImCross } from \"react-icons/im\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction TodoForm({ submitEvent, submitText, title, defaultTodoText }) {\n  const navigate = useNavigate();\n  console.log(defaultTodoText);\n  const [newTodoValue, setNewTodoValue] = useState(defaultTodoText || \"\");\n\n  useEffect(() => {\n    setNewTodoValue(defaultTodoText);\n  }, [defaultTodoText]);\n\n  const onCancel = () => {\n    navigate(\"/\");\n  };\n  const onSubmit = (event) => {\n    event.preventDefault();\n    submitEvent(newTodoValue);\n    navigate(\"/\");\n  };\n  const onChangeText = (event) => {\n    setNewTodoValue(event.target.value);\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <label htmlFor=\"text-todo\">\n        {/* {Escribe un nuevo TODO} */}\n        {title}\n      </label>\n      <textarea\n        name=\"\"\n        id=\"text-todo\"\n        cols=\"30\"\n        rows=\"10\"\n        placeholder=\"Agregue su tarea\"\n        value={newTodoValue}\n        onChange={onChangeText}\n      ></textarea>\n      {/* <div className=\"todoForm__buttonContainer\"> */}\n      <span className=\"todoForm-button__cancel\" onClick={onCancel}>\n        <ImCross />{\" \"}\n      </span>\n      <button\n        type=\"submit\"\n        className=\"todoForm-button todoForm-button__add\"\n        disabled={newTodoValue?.length <= 0}\n      >\n        {/* AÃ±adir */}\n        {submitText}\n      </button>\n      {/* </div> */}\n    </form>\n  );\n}\n\nexport { TodoForm };\n","import { useEffect, useReducer } from \"react\"\n\nfunction useLocalStorage(itemName, initialValue) {\n\n    const [state, dispatch] = useReducer(reducer, initialState({ initialValue }));\n\n    const {\n        sincronizedItem,\n        item\n    } = state\n\n\n    // const [sincronizedItem, setSincronizedItem] = useState(true)\n    // const [item, setItem] = useState(initialValue)\n\n    //Action Creators\n    const onSuccess = (parsedItem) => dispatch({\n        type: actionTypes.success,\n        payload: parsedItem\n    })\n    const onSave = (newItem) => dispatch({\n        type: actionTypes.save,\n        payload: newItem\n    })\n    const onSincronize = ()=> dispatch({\n        type: actionTypes.sincronize\n    })\n\n    useEffect(() => {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n            localStorage.setItem(itemName, JSON.stringify(initialValue));\n            parsedItem = initialValue;\n        } else {\n            parsedItem = JSON.parse(localStorageItem);\n        }\n        onSuccess(parsedItem)\n\n    }, [sincronizedItem])\n\n    const saveItem = (newItem) => {\n        localStorage.setItem(itemName, JSON.stringify(newItem))\n        onSave(newItem)\n        // setItem(newItem)\n    }\n\n    const sincronizeItem = () => {\n        onSincronize()\n    }\n\n    return [\n        item,\n        saveItem,\n        sincronizeItem\n    ]\n}\n\nconst initialState = ({ initialValue }) => ({\n    sincronizedItem: true,\n    item: initialValue\n})\n\nconst actionTypes = {\n    success: 'SUCCESS',\n    save: 'SAVE',\n    sincronize: 'SINCRONIZE'\n}\n\nconst reducerObject = (state, payload) => ({\n    [actionTypes.success]: {\n        ...state,\n        sincronizedItem: true,\n        item: payload\n    },\n    [actionTypes.save]: {\n        ...state,\n        item: payload\n    },\n    [actionTypes.sincronize]: {\n        ...state,\n        sincronizedItem: false,\n    }\n})\n\nconst reducer = (state, action) => {\n    return reducerObject(state, action.payload)[action.type] || state\n}\n\nexport { useLocalStorage };","import { useState, useMemo } from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\n\nfunction useTodos() {\n  const [todos, saveTodos, setSincronizedItem] = useLocalStorage(\n    \"TODOS_V2\",\n    []\n  );\n\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const completedTodos = todos.filter((todo) => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  const filteredText = useMemo(\n    () =>\n      todos.filter((todo) => {\n        return todo.text.toLowerCase().includes(searchValue.toLowerCase());\n      }),\n    [todos, searchValue]\n  );\n\n  const toggleTodo = (id) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === id);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = !todos[todoIndex].completed;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (id) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === id);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  const addTodo = (text) => {\n    const id = newTodoId(todos);\n    const newTodos = [...todos];\n    newTodos.push({\n      completed: false,\n      text,\n      id,\n    });\n\n    saveTodos(newTodos);\n  };\n\n  const editTodo = (id, newText) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === id);\n    const newTodos = [...todos];\n    newTodos[todoIndex].text = newText;\n    saveTodos(newTodos);\n  };\n\n  const getTodo = (id) => {\n    const todoIndex = todos.findIndex((todo) => todo.id === id);\n    const text = todos[todoIndex]?.text;\n    return text;\n  };\n\n  const states = {\n    totalTodos,\n    completedTodos,\n    searchValue,\n    filteredText,\n    getTodo,\n  };\n  const stateUpdaters = {\n    setSearchValue,\n    toggleTodo,\n    deleteTodo,\n    editTodo,\n    addTodo,\n    setSincronizedItem,\n  };\n\n  return { states, stateUpdaters };\n}\n\nfunction newTodoId(todoList) {\n  if (!todoList.length) {\n    return 1;\n  }\n\n  const idList = todoList.map((todo) => todo.id);\n  const idMax = Math.max(...idList);\n  return idMax + 1;\n}\nexport { useTodos };\n","import React from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { TodoForm } from \"../../components/TodoForm/TodoForm\";\nimport { useTodos } from \"../../hooks/useTodos\";\n\nconst EditTodoPage = () => {\n  const location = useLocation();\n  const params = useParams();\n  const id = Number(params.id);\n\n  const { editTodo } = useTodos().stateUpdaters;\n  const { getTodo } = useTodos().states;\n\n  let todoText;\n\n  if (location.state?.todo) {\n    todoText = location.state.todo.text;\n  } else {\n    todoText = getTodo(id);\n  }\n\n  return (\n    <div>\n      <TodoForm\n        submitEvent={(newText) => editTodo(id, newText)}\n        submitText=\"Editar\"\n        title=\"Edita tu TODO\"\n        defaultTodoText={todoText}\n      />\n    </div>\n  );\n};\n\nexport { EditTodoPage };\n","import React from 'react'\n\nfunction TodoHeader({ children }) {\n    return (\n        <header>\n            {children}\n        </header>\n    )\n}\n\nexport { TodoHeader }\n","import React from 'react'\n\nfunction TodoCounter({ totalTodos, completedTodos }) {\n\n    return (\n        <h2 className=\"todo-counter\">\n            Has completado {completedTodos} de {totalTodos} TODOs\n        </h2>\n    )\n}\n\nexport { TodoCounter }","import React from \"react\"\n\n\nfunction TodoSearch({ searchValue, setSearchValue }) {\n\n    const onSearchValueChange = (event) => {\n        setSearchValue(event.target.value)\n    }\n\n    return (\n        <input className=\"todo-search\" placeholder=\"Search...\" type=\"text\" value={searchValue} onChange={onSearchValueChange} />\n    )\n}\n\nexport { TodoSearch }\n","import React from 'react'\n\nfunction TodoList(props) {\n    const renderFunc =  props.children || props.render;\n    return (\n        <section className=\"todo-list\">\n            {!props.totalTodos && props.onEmptyTodos()}\n            {(!!props.totalTodos && !props.filteredText.length) && props.onEmptySearchResults(props.searchValue) }\n            {props.filteredText.map(renderFunc)}\n        </section>\n    )\n}\n\nexport { TodoList }\n","import React from \"react\";\nimport { FaCheck } from \"react-icons/fa\";\nimport { ImCross } from \"react-icons/im\";\nimport { AiFillEdit } from \"react-icons/ai\";\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"todo-item\">\n      <span\n        className={`icon icon-check ${props.completed && \"icon-check--active\"}`}\n        onClick={props.onComplete}\n      >\n        <FaCheck />\n      </span>\n      <p className={`${props.completed && \"todo-item-p-completed\"}`}>\n        {props.text}\n      </p>\n      <span className=\"icon icon-edit\" onClick={props.onEdit}>\n        <AiFillEdit />\n      </span>\n      <span className=\"icon icon-delete\" onClick={props.onDelete}>\n        <ImCross />\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from \"react\";\n\nfunction CreateTodoButton({ onClick }) {\n  return (\n    <button className=\"create-todo-button\" onClick={onClick}>\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from \"react\";\n\nfunction EmptyTodos() {\n  return (\n    <>\n      <p className=\"empty-todos\">Agregue una tarea a realizar</p>\n    </>\n  );\n}\n\nexport { EmptyTodos };\n","import React from \"react\";\nimport { withStorageListener } from \"../../assets/withStorageListener\";\n\nfunction ChangeAlert({ show, toggleShow }) {\n  if (show) {\n    return (\n      <div className=\"ChangeAlert-bg\">\n        <div className=\"alert-container\">\n          <p>Hubo cambios en la lista</p>\n          <button onClick={() => toggleShow(false)}>Actualizar</button>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nconst ChangeAlertWithStorageListener = withStorageListener(ChangeAlert);\n\nexport { ChangeAlertWithStorageListener };\n","import React, { useState, useEffect } from 'react'\n\nfunction withStorageListener(WrappedComponent) {\n    return function WrappedComponentWithStorageListener(props) {\n        const [storageChange, setStorageChange] = useState(false);\n\n        useEffect(() => {\n            const onChange = (change) => {\n                if (change.key === 'TODOS_V1') {\n                    console.log('Hubo cambios en TODO_V1')\n                    setStorageChange(true)\n                }\n            }\n            window.addEventListener('storage', onChange)\n            return () => {\n                window.removeEventListener('storage', onChange)\n            }\n        }, [])\n\n        const toggleShow = () => {\n            setStorageChange(false)\n            props.sincronize(false)\n        }\n\n        return (\n            <WrappedComponent\n                show={storageChange}\n                toggleShow={toggleShow}\n            />)\n    }\n}\nexport { withStorageListener }\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTodos } from \"../../hooks/useTodos\";\n\nimport { TodoHeader } from \"../../components/TodoHeader/TodoHeader\";\nimport { TodoCounter } from \"../../components/TodoCounter/TodoCounter\";\nimport { TodoSearch } from \"../../components/TodoSearch/TodoSearch\";\nimport { TodoList } from \"../../components/TodoList/TodoList\";\nimport { TodoItem } from \"../../components/TodoItem/TodoItem\";\nimport { CreateTodoButton } from \"../../components/CreateTodoButton/CreateTodoButton\";\nimport { EmptyTodos } from \"../../components/EmptyTodos/EmptyTodos\";\nimport { ChangeAlertWithStorageListener } from \"../../components/ChangeAlertWithStorageListener/ChangeAlert\";\n\nfunction HomePage() {\n  const navigate = useNavigate();\n  const { states, stateUpdaters } = useTodos();\n\n  const { filteredText, totalTodos, completedTodos, searchValue } = states;\n  const { toggleTodo, deleteTodo, setSearchValue, setSincronizedItem } =\n    stateUpdaters;\n\n  return (\n    <>\n      <TodoHeader>\n        <TodoCounter totalTodos={totalTodos} completedTodos={completedTodos} />\n        <TodoSearch searchValue={searchValue} setSearchValue={setSearchValue} />\n      </TodoHeader>\n\n      <TodoList\n        filteredText={filteredText}\n        totalTodos={totalTodos}\n        searchValue={searchValue}\n        onEmptyTodos={() => <EmptyTodos />}\n        onEmptySearchResults={(searchText) => (\n          <p className=\"empty-todos\">No hay resultados para: {searchText}</p>\n        )}\n        render={(todo) => (\n          <TodoItem\n            key={todo.id}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => toggleTodo(todo.id)}\n            onEdit={() =>\n              navigate(\"/edit/\" + todo.id, {\n                state: { todo },\n              })\n            }\n            onDelete={() => deleteTodo(todo.id)}\n          />\n        )}\n      ></TodoList>\n\n      {/* {openModal && (\n        <Modal>\n          <TodoForm addTodo={addTodo} setOpenModal={setOpenModal} />\n        </Modal>\n      )} */}\n      <CreateTodoButton\n        onClick={() => navigate(\"/new\")}\n        // openModal={openModal}\n        // setOpenModal={setOpenModal}\n      />\n\n      <ChangeAlertWithStorageListener sincronize={setSincronizedItem} />\n    </>\n  );\n}\nexport { HomePage };\n","import React from \"react\";\nimport { TodoForm } from \"../../components/TodoForm/TodoForm\";\nimport { useTodos } from \"../../hooks/useTodos\";\n\nconst NewTodoPage = () => {\n  const { addTodo } = useTodos().stateUpdaters;\n  return (\n    <div>\n      <TodoForm\n        submitEvent={(text) => addTodo(text)}\n        submitText=\"AÃ±adir\"\n        title=\"Escribe un nuevo TODO\"\n      />\n    </div>\n  );\n};\n\nexport { NewTodoPage };\n","import React from \"react\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport { EditTodoPage } from \"./EditTodoPage\";\nimport { HomePage } from \"./HomePage\";\nimport { NewTodoPage } from \"./NewTodoPage\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/new\" element={<NewTodoPage />} />\n        <Route path=\"/edit/:id\" element={<EditTodoPage />} />\n        <Route path=\"*\" element={<p>Not Found</p>} />\n      </Routes>\n    </HashRouter>\n  );\n}\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./views/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}